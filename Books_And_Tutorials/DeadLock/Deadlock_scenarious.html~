<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
               "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
lang="en" xml:lang="en">
<head>
<title>Deadlock scenarious in HermesAPI C++ Version.</title>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1"/>
<meta name="generator" content="Org-mode"/>
<meta name="generated" content="2013-12-26 12:43:46 "/>
<meta name="author" content=""/>
<meta name="description" content=""/>
<meta name="keywords" content=""/>
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  html { font-family: Times, serif; font-size: 12pt; }
  .title  { text-align: center; }
  .todo   { color: red; }
  .done   { color: green; }
  .tag    { background-color: #add8e6; font-weight:normal }
  .target { }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  p.verse { margin-left: 3% }
  pre {
	border: 1pt solid #AEBDCC;
	background-color: #F3F5F7;
	padding: 5pt;
	font-family: courier, monospace;
        font-size: 90%;
        overflow:auto;
  }
  table { border-collapse: collapse; }
  td, th { vertical-align: top; }
  dt { font-weight: bold; }
  div.figure { padding: 0.5em; }
  div.figure p { text-align: center; }
  textarea { overflow-x: auto; }
  .linenr { font-size:smaller }
  .code-highlighted {background-color:#ffff00;}
  .org-info-js_info-navigation { border-style:none; }
  #org-info-js_console-label { font-size:10px; font-weight:bold;
                               white-space:nowrap; }
  .org-info-js_search-highlight {background-color:#ffff00; color:#000000;
                                 font-weight:bold; }
  /*]]>*/-->
</style>
<script type="text/javascript">
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">

<h1 class="title">Deadlock scenarious in HermesAPI C++ Version.</h1>


<meta http-equiv="Content-Style-Type" content="text/css">
<link rel="stylesheet" href="../../CSS/org-style.css" type="text/css" />
<style type="text/css"/><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
<div id="postamble">
<p class="author"> Author: Pralay Patoria
<a href="mailto:ppatoria@gmail.com">&lt;ppatoria@gmail.com&gt;</a>
</p>
<p class="date"> Date: 01-12-2013</p>
</div>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Scenario: Close called on OnConnectionChanged. </a></li>
<li><a href="#sec-2">2 Scenario: Synchronous Send is called on a callback of Asynchonous Send. </a></li>
</ul>
</div>
</div>


<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Scenario: Close called on OnConnectionChanged. </h2>
<div class="outline-text-2" id="text-1">

<p>Precondition: Both Open and Close Method aquire same lock so that one method can be called at a time.
</p><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption></caption>
<colgroup><col align="left" /><col align="left" />
</colgroup>
<thead>
<tr><th scope="col">Main Thread</th><th scope="col">Cache Thread</th></tr>
</thead>
<tbody>
<tr><td>Open</td><td>.</td></tr>
<tr><td>Spawn Cache Thread &hellip;&hellip;&hellip;.</td><td>Connect to Cache.</td></tr>
<tr><td>.</td><td>OnConnectionChanged invoked.</td></tr>
<tr><td>.</td><td>.</td></tr>
<tr><td>Query received</td><td>.</td></tr>
<tr><td>enqueue query and handler</td><td>.</td></tr>
<tr><td>.</td><td>dequeue query</td></tr>
<tr><td>.</td><td>execute against cache</td></tr>
<tr><td>.</td><td>invoke client callback</td></tr>
<tr><td>.</td><td>.</td></tr>
<tr><td>.</td><td>.</td></tr>
<tr><td>.</td><td>[X] Unhandled Exception from client on Cache Thread on OnConnectionChanged</td></tr>
<tr><td>[X] Open is still in process and hold the lock</td><td>[X] Close will be called from Cache thread.</td></tr>
<tr><td></td><td>[X] Close will try aquire lock that open is holding</td></tr>
</tbody>
</table>


<p>
Solution:
</p>

</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Scenario: Synchronous Send is called on a callback of Asynchonous Send. </h2>
<div class="outline-text-2" id="text-2">

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption></caption>
<colgroup><col align="left" /><col align="left" />
</colgroup>
<thead>
<tr><th scope="col">Main Thread</th><th scope="col">TIS<sub>Socket</sub><sub>Listener</sub><sub>Thread</sub></th></tr>
</thead>
<tbody>
<tr><td>Asynchronous Send</td><td>.</td></tr>
<tr><td>QueryID mapped with Client callback</td><td>.</td></tr>
<tr><td>Query send to agora</td><td>.</td></tr>
<tr><td>.</td><td>TISReply received</td></tr>
<tr><td>.</td><td>Get client callback by queryID from the map</td></tr>
<tr><td>.</td><td>Invoke cleint callback</td></tr>
<tr><td>.</td><td>Client call Synchronous Send</td></tr>
<tr><td>.</td><td>[X] Query will be sent to Agora and this thread will wait for the TISReply (for itself)</td></tr>
<tr><td>.</td><td>[X] This Thread itself listen to TISReply so it will be hung result in deadlock</td></tr>
</tbody>
</table>


<p>
(X)             
</p>


</div>
</div>
<div id="postamble">
<p class="date"> Date: 2013-12-26 12:43:46 </p>
</div>
</div>
</body>
</html>
