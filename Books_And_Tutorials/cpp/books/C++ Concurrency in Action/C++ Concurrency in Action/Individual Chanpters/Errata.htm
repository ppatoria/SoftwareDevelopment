<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<title>C++ Concurrency in Action by Anthony Williams - Errata</title>
<meta name="description" content="Errata for C++ Concurrency in Action by Anthony Williams">
<style type="text/css">
.errata dt{
    display: list-item;
    margin-left: 1em;
    margin-bottom: 0.5em;
    font-weight: bold;
    font-size: 1.2em;
    list-style-type: disc;
 }
ins
{
  color: black;
  background: #a0ffa0;
  text-decoration: underline;
  font-weight: bold;
  }
del
{
  color: black;
  background: #ffa0a0;
  text-decoration: line-through;
}
</style>
</head>
<body>
<h1>C++ Concurrency in Action: Practical Multithreading Errata</h1>

<dl class="errata">
  <dt>Page 17, third code snippet</dt>
  <dd>The first line has an opening parenthesis following the
  <code>[]</code> lambda introducer rather than an opening brace. It
  should look like this:
    <pre>
std::thread my_thread([]<del>(</del><ins>{</ins>
    do_something();
    do_something_else();
});
</pre></dd>
  <dt>Page 90, code snippet after 4th paragraph</dt>
  <dd>The duration type used for printing the time taken is incorrect
  and won't compile. The use of <code>std::chrono::seconds</code> as
  the second template parameter is incorrect, and should be
  removed. The output statement should say:
    <pre>
std::cout&lt;&lt;"do_something() took "
&lt;&lt;std::chrono::duration&lt;double<del>,std::chrono::seconds</del>&gt;(stop-start).count()
&lt;&lt;" seconds"&lt;&lt;std::endl;
</pre></dd>
  <dt>Page 120, listing 5.2</dt>
  <dd>The listing uses <code>std::milliseconds</code> for the
  timeout. The time periods are in namespace <code>std::chrono</code>,
  so this should be <code>std::chrono::milliseconds</code>:
    <pre>
std::this_thread::sleep(std::<ins>chrono::</ins>milliseconds(1));
    </pre></dd>
  <dt>Page 154, listing 6.2</dt>
  <dd>In the definition of <code>push()</code>, the value pushed on to
  the queue is of course <code>new_value</code>, not
  <code>data</code>. The second line should therefore read:
    <pre>
data_queue.push(std::move(<ins>new_value</ins><del>data</del>));
</pre>
  </dd>
  <dt>Page 244, listing 8.2</dt>
  <dd>The line indicated by the number 9 cueball is missing template
  parameters for <code>accumulate_block</code>. The line should read:
    <pre>
accumulate_block<ins>&lt;Iterator,T&gt;</ins>()(block_start,last,results[num_threads-1]);
</pre>
  </dd>
  <dt>Page 246, listing 8.3</dt>
  <dd>The line indicated by the number 7 cueball is missing template
  parameters for <code>accumulate_block</code>. The line should read:
    <pre>
T last_result=accumulate_block<ins>&lt;Iterator,T&gt;</ins>()(block_start,last);
</pre>
  </dd>
  <dt>Page 247, code snippet</dt>
  <dd>There are missing template parameters for 
  <code>accumulate_block</code> after the <code>for</code> loop. The line should read:
    <pre>
T last_result=accumulate_block<ins>&lt;Iterator,T&gt;</ins>()(block_start,last);
</pre>
  </dd>
  <dt>Page 249, listing 8.4</dt>
  <dd>There are missing template parameters for the direct call to
  <code>accumulate_block</code> on the 4th line of the listing on this
  page. The line should read:
    <pre>
T last_result=accumulate_block<ins>&lt;Iterator,T&gt;</ins>()(block_start,last);
</pre>
  </dd>
  <dt>Page 265, listing 8.11</dt>
  <dd>There is a test for an empty range that returns <code>last</code>. However, this function has
  a <code>void</code> return type, so it should just be a plain <code>return</code>:
    <pre>
if(!length)
    return<del> last</del>;
</pre></dd>
  <dt>Page 282, listing 9.5</dt>
  <dd>In the <code>while</code> loop that waits for the
  <code>new_lower</code> result to be ready, the loop condition has a
  spurious <code>!</code>, which should be removed:
    <pre>
while(<del>!</del>new_lower.wait_for(std::chrono::seconds(0))==std::future_status::timeout)
    </pre></dd>
</dl>
    
</body>
</html>
<!-- text below generated by server. PLEASE REMOVE --><!-- Counter/Statistics data collection code --><script language="JavaScript" src="http://l.yimg.com/d/lib/smb/js/hosting/cp/js_source/whv2_001.js"></script><script language="javascript">geovisit();</script><noscript><img src="http://visit.webhosting.yahoo.com/visit.gif?us1388059730" alt="setstats" border="0" width="1" height="1"></noscript><script type="text/javascript">(function (d, w) {var x = d.getElementsByTagName('SCRIPT')[0];var f = function () {var s = d.createElement('SCRIPT');s.type = 'text/javascript';s.async = true;s.src = "//np.lexity.com/embed/YW/7a82d563d5e1d9bb021fb049c6080862?id=9054eafd4bb1";x.parentNode.insertBefore(s, x);};w.attachEvent ? w.attachEvent('onload',f) :w.addEventListener('load',f,false);}(document, window));</script>