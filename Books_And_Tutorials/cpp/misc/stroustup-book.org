* The C++ language features most directly support four programming styles:
• Procedural programming
• Data abstraction
• Object-oriented programming
• Generic programming

** Language features:
• _Classes support_ all of the mentioned styles; all rely on the user representing ideas as user-
deﬁned types or objects of user-deﬁned types.

• _Public/private access_ controlsupports data abstraction and object-oriented programming by
making a clear distinction between interface and implementation.

• _Member functions, constructors, destructors, and user-deﬁned assignment_ provide a clean
functional interface to objects as needed by data abstraction and object-oriented program-
ming. Theyalso provide a uniform notation as needed for generic programming.More
general overloading had to wait until 1984 and uniform initialization until 2010.

• _Function declarations_ provide speciﬁc statically checked interfaces to member functions as
well as freestanding functions, so theysupport all of the mentioned styles.Theyare neces-
sary for overloading. Atthe time, C lacked ‘‘function prototypes’’but Simula had function
declarations as well as member functions.

• _Generic functions and parameterized types_ (generated from functions and classes using
macros) support generic programming.Templates had to wait until 1988.

• _Base and derived classes_ provide the foundation for object-oriented programming and some
forms of data abstraction.Virtual functions had to wait until 1983.

• _Inlining_ made the use of these facilities affordable in systems programming and for building
run-time and space efﬁcient libraries.
