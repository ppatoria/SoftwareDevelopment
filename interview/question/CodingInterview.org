* Programming Language
** Question 1 Please implement a function that checks whether a positive number is a palindrome or not. For example, 121 is a palindrome, but 123 is not.
** Question 2 The declaration of class CMyString is found in Listing 2-9. Please add an assignment operator to it.
** Question 3 Please design and implement a class of which we can only create a single instance.
** Question 4 There are three threads in a process. 
              The first thread prints 1 1 1 …, 
	      the second one prints 2 2 2 …, 
	      and the third one prints 3 3 3 … endlessly. 
	      How do you schedule these three threads in order to print 1 2 3 1 2 3 …?

* Data Structure
** Question 5 An array contains n numbers ranging from 0 to n-2. 
              There is exactly one number duplicated in the array. 
	      How do you find the duplicated number? 
	      For example, if an array with length 5 contains numbers {0, 2, 1, 3, 2}, the duplicated number is 2.
** Question 6 An array contains n numbers ranging from 0 to n-1. 
              There are some numbers duplicated in the array. 
	      It is not clear how many numbers are duplicated or how many times a number gets duplicated. 
	      How do you find a duplicated number in the array? 
	      For example, if an array of length 7 contains the numbers {2, 3, 1, 0, 2, 5, 3}, the implemented function (or method) should return either 2 or 3.
** Question 7 In a 2-D matrix, every row is increasingly sorted from left to right, and the last number in each row is not greater than the first number of the next row. 
              A sample matrix follows. 
	      Please implement a function to check whether a number is in such a matrix or not. 
	      It returns true if it tries to find the number 7 in the sample matrix, but it returns false if it tries to find the number 12.
	      1   3   5
	      7   9   11
	      13  15  17
** Question 8 In a 2-D matrix, every row is increasingly sorted from left to right, and every column is increasingly sorted from top to bottom. 
              Please implement a function to check whether a number is in such a matrix or not. For example, all rows and columns are increasingly sorted in the following matrix. 
	      It returns true if it tries to find number 7, but it returns false if it tries to find number 5.
	      1   2   8   9
	      2   4   9   12
	      4   7   10  13
	      6   8   11  15
** Question 9 Please implement a function to replace each blank in a string with “%20”. 
              For instance, it outputs “We%20are%20happy.” if the input is “We are happy.”.
** Question 10 Given two sorted arrays, denoted as array1 and array2, please merge them into array1 and keep the merged array sorted. 
               Suppose there is sufficient vacant memory at the end of array1 to accommodate elements of array2.
** Question 11 How do you implement a function to match regular expressions with ‘.’ and ‘*’ in patterns? 
               The character ‘.’ in a pattern matches a single character, and ‘*’ matches zero or any number of characters preceding it. 
	       Matching means that a string fully matches the pattern where all characters in a string match the whole pattern. 
	       For example, the string “aaa” matches the pattern “a.a” and the pattern “ab*ac*a”. However, it does not match the pattern “aa.a” nor “ab*a”.

Question 12 How do you check whether a string stands for a number or not? Numbers include positive and negative integers and floats.
For example, strings “+100.”, “5e2”, “-.123”, “3.1416”, and “-1E-16” stand for numbers, but “12e”, “1a3.14”, “1.2.3”, “+-5”, and “12e+5.4” do not.

Question 13 P lease implement a function to print a list from its tail to head.

Question 14 P lease implement a function to sort a given list.

Question 15 P lease implement a function to merge two sorted lists into a single sorted list. For example, the merged list of two sorted lists, L1 and L2 in
Figure 3-7, is L3.
Figure 3

Question 16 How do you check whether there is a loop in a linked list? For example, the list in Figure 3-9 contains a loop.

Question 17 If there is a loop in a linked list, how do you get the entry node of the loop? The entry node is the first node in the loop from the head of a list.
For instance, the entry node of the loop in the list of Figure 3-9 is the node with value 3.

Question 18 Given a node in a binary tree, please implement a function to retrieve its next node in the in-order traversal sequence. There is a pointer to the
parent node in each tree node.

Question 19 How do you verify whether a binary tree is a binary search tree? For example, the tree in Figure 3-13 is a binary search tree.

Question 20 P lease implement a function to get the largest size of all binary search subtrees in a given binary tree. A subtree inside a tree t is a tree
consisting of a node and all of its descendants in t. The size of a tree is defined as the number of nodes in the tree.
For example, the largest binary search subtree in the binary tree of Figure 3-14 contains three nodes, which are node 9, node 8, and node 10.

Question 21 P lease design a queue with two stacks and implement methods to enqueue and dequeue items.

Question 22 P lease design a stack with two queues and implement the methods to push and pop items.

** Algorithms

Question 23 Given a number n, please find the nth element in the Fibonacci Sequence, which is defined as the following equation:

Question 24 There is a stair with n levels. A frog can jump up one level or two levels at one time on the stair. How many ways are there for the frog to jump
from the bottom of the stairs to the top?

Question 25 There is a stair with n levels. A frog can jump up 1, 2, …, n-1, n levels at each step on the stair. How many approaches are there for this frog to
jump from the bottom of the stair to the top?

Question 26 Rectangles with size 2×1 are utilized to cover other rectangles, horizontally or vertically. How many approaches are available to cover a 2×8
rectangle with eight 2×1 rectangles (Figure 4-2)?

Question 27 When some elements at the beginning of an array are moved to the end, it becomes a rotation of the original array. P lease implement a function
to get the minimum number in a rotation of an increasingly sorted array. For example, the array {3, 4, 5, 1, 2} is a rotation of array {1, 2, 3, 4, 5}, of which the
minimum is 1.

Question 28 A turning number is the maximum number in a unimodal array that increases and then decreases. P lease write a function (or a method) that finds
the index of the turning number in a unimodal array.
For example, the turning number in the array {1, 2, 3, 4, 5, 10, 9, 8, 7, 6} is 10, so its index 5 is the expected output.

Question 29 How do you find the majority element in an array when it exists? The majority is an element that occurs for more than half of the size of the
array.
For example, the number 2 in the array {1, 2, 3, 2, 2, 2, 5, 4, 2} is the majority element because it appears five times and the size of the array is 9.


Question 30 How do you implement a function to check whether there is a path for a string in a matrix of characters? It moves to left, right, up, and down in
a matrix, and a cell for a step. The path can start from any cell in a matrix. If a cell is occupied by a character of a string on the path, it cannot be occupied by
another character again.
For example, the matrix below with three rows and four columns has a path for the string “ bcced” (as highlighted in the matrix). It does not have a path for the
string “ abcb”, because the first “ b” in the string occupies the “ b” cell in the matrix, and the second “ b” in the string cannot enter the same cell again.
a b c e
s f c s
a d e e


Question 31 A robot starts at cell (0, 0) of a grid with m rows and n columns. It can move to the left, right, up, and down, and moves one cell for a step. It
cannot enter cells where the digit sum of the row index and column index are greater than a given k.
For example, when k is 18, the robot can reach cell (35, 37) because 3+5+3+7=18. However, it cannot reach cell (35, 38) because 3+5+3+8=19 and that is greater
than k. How many cells can the robot reach?

Question 32 Implement a function that finds the edit distance of two input strings. There are three types of edit operations: insertion, deletion, and substitution. Edit distance is the minimal number of edit operations to modify a string from one state to
the other.
For example, the edit distance between “ Saturday” and “ Sunday” is 3 since the following three edit operations are required to modify one into another:
(1) Saturday   Sturday (deletion of ‘ a’ )
(2) Sturday   Surday (deletion of ‘ t’ )
(3) Surday   Sunday (substitution of ‘ n’ for ‘ r’ )
There is no way to achieve it with fewer than three operations.

Question 33 P lease implement a function that gets the minimal number of coins with values v1, v2, …, vn, to make change for an amount of money with value t. There are an infinite number of coins for each value vi.
For example, the minimum number of coins to make change for 15 out of a set of coins with values 1, 3, 9, 10 is 3. We can choose two coins with value 3 and a coin with value 9. The number of coins for other choices should be greater than 3.

Question 34 P lease design an efficient algorithm to lay out cells on phone keyboards in order to minimize key presses.

Question 35 P lease implement a function to get the number of 1s in the binary representation of an integer. For example, the integer 9 is 1001 in binary, so it
returns 2 since there are two bits of 1.

Question 36 P lease check whether a number is a power product of 2 in only one C statement.

Question 37 Given two integers, m and n, please calculate the number of bits in binary that need to be modified to change m to n. For example, the number 10
is 1010 in binary, and 13 is 1101 in binary. We can modify 3 bits of 1010 to get 1101 in binary.

Question 38 Let’ s assume all numbers except two occur twice in an array. How do you get those two numbers to occur only once in O(n) time and O(1)
space?
For example, only two numbers, 4 and 6, in the array {2, 4, 3, 6, 3, 2, 5, 5} occur once, and the others numbers occur twice. Therefore, the output should be 4 and
6.

Question 39 Two numbers out of n numbers from 1 to n are missing. The remaining n-2 numbers are restored in an array, not in any particular order. P lease
write a method (or a function) to find the missing two numbers.


* High-Quality Code

Question 40 P lease implement the function double Power(double base, int exponent) to raise a number base to power of exponent . You are not allowed to call library functions,
and it is not necessary to take care of overflow issues.

Question 41 Given a number n, please print all numbers from 1 to the maximum n digit number in order. For example, if the input is 3, it prints 1, 2, 3, …, 999, which is the maximum number
with three digits.

Question 42 P lease design a function to add two arbitrary positive integers.

Question 43 How to delete a given node from a single-linked list in O(1) time?

Question 44 Given a sorted linked list, please delete all duplicated numbers and leave only distinct numbers from the original list. For example, when the duplicated numbers in the list in
Figure 5-4(a) are removed, it becomes the list in Figure 5-4(b).

Question 45 P lease reorder an input array to place all odds before evens. For example, after numbers in the array {1, 2, 3, 4, 5} are reordered, it looks like {1, 5, 3, 4, 2}. The result is not
unique, and there are multiple arrays meeting the reordering criteria.

Question 46 Given an array and a value, how do you implement a function to remove all instances of that value in place and return the new length of the array? It is not required that you keep
the order of the remaining numbers. It doesn’ t matter what you leave beyond the new length.
For example, if the input array is {4, 3, 2, 1, 2, 3, 6}, the resulting array after removing value 2 contains the numbers {4, 3, 1, 3, 6}, and the new length of the remaining array is 5.

Question 47 P lease implement a function to get the kth node from tail of a single linked list. For example, if a list has six nodes whose values are 1, 2, 3, 4, 5,
6 in order from head, the third node from tail contains the value 4.

Question 48 P lease implement a function to reverse a list.

Question 49 How do you design an algorithm to reverse every k nodes in a list? A list is divided into several groups, and each group has k nodes except
the last group, where the number of nodes may be less than k. P lease reverse the nodes in each group and connect all groups together.
For example, when groups with three nodes are reversed in the list of Figure 5-8(a), it becomes the list in Figure 5-8(b).

Question 50 Given two binary trees, please check whether one is a substructure of the other. For example, the tree b on the right side of Figure 5-9 is a
substructure of the tree a on the left side.
